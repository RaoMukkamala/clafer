open util/integer
pred show {}


abstract sig c0_Phone
{ r_c0_networking : one c0_networking
, r_c0_location : lone c0_location
, r_c0_gpu : set c0_gpu }

sig c0_networking
{ r_c0_wifi : lone c0_wifi
, r_c0_bluetooth : lone c0_bluetooth
, r_c0_mobile : lone c0_mobile
, r_c0_nfc : lone c0_nfc }
{ one @r_c0_networking.this }

sig c0_wifi
{ r_c0_typeB : lone c0_typeB
, r_c0_typeG : lone c0_typeG
, r_c0_typeN : lone c0_typeN }
{ one @r_c0_wifi.this }

sig c0_typeB
{}
{ one @r_c0_typeB.this }

sig c0_typeG
{}
{ one @r_c0_typeG.this }

sig c0_typeN
{}
{ one @r_c0_typeN.this }

sig c0_bluetooth
{}
{ one @r_c0_bluetooth.this }

sig c0_mobile
{}
{ one @r_c0_mobile.this }

sig c0_nfc
{}
{ one @r_c0_nfc.this }

sig c0_location
{ r_c0_gps : lone c0_gps
, r_c0_agps : lone c0_agps }
{ one @r_c0_location.this
  let children = (r_c0_gps + r_c0_agps) | one children }

sig c0_gps
{}
{ one @r_c0_gps.this }

sig c0_agps
{}
{ one @r_c0_agps.this }

sig c0_gpu
{}
{ one @r_c0_gpu.this }

one sig c0_PhoneWithGps extends c0_Phone
{}
{ some (this.@r_c0_location).@r_c0_gps }

one sig c0_PhoneWithWifi extends c0_Phone
{}
{ some ((this.@r_c0_networking).@r_c0_wifi).@r_c0_typeN }

one sig c0_PhonewithWifiAndGpsNoBluetoothOrNfc extends c0_Phone
{}
{ ((some (this.@r_c0_networking).@r_c0_wifi) && (some (this.@r_c0_location).@r_c0_gps)) && (!((some (this.@r_c0_networking).@r_c0_bluetooth) || (some (this.@r_c0_networking).@r_c0_nfc))) }

one sig c0_PhoneWithGpu extends c0_Phone
{}
{ some this.@r_c0_gpu }

fact { all  p : c0_Phone | some (p.@r_c0_networking).@r_c0_mobile }
