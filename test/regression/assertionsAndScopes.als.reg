open util/integer
pred show {}
run show for 1 but 2 c0_a, 6 c0_b, 6 c0_c

fact { 2 <= #c0_a and #c0_a <= 2 }
sig c0_a
{ r_c0_b : set c0_b }
{ 3 <= #r_c0_b and #r_c0_b <= 3 }

sig c0_b
{ r_c0_c : lone c0_c }
{ one @r_c0_b.this }

sig c0_c
{}
{ one @r_c0_c.this }

assert assertOnLine_5 { some (c0_a.@r_c0_b).@r_c0_c }
check assertOnLine_5 for 1 but 2 c0_a, 6 c0_b, 6 c0_c

assert assertOnLine_7 { no (c0_a.@r_c0_b).@r_c0_c }
check assertOnLine_7 for 1 but 2 c0_a, 6 c0_b, 6 c0_c

assert assertOnLine_9 { (#(c0_a.@r_c0_b)) = 6 }
check assertOnLine_9 for 1 but 2 c0_a, 6 c0_b, 6 c0_c
